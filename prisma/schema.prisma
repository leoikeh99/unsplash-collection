// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(auto()) @map("_id") @db.ObjectId
  userId             String  @db.ObjectId
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String       @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?      @unique
  emailVerified DateTime?
  image         String?
  Collections   Collection[]
  Account       Account[]
  Session       Session[]
}

model Collection {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String?
  photoIds    String[] @db.ObjectId
  photos      Photo[]  @relation(fields: [photoIds], references: [id])
  userId      String   @db.ObjectId
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Photo {
  id            String       @id @default(auto()) @map("_id") @db.ObjectId
  description   String
  image         String
  unsplashId    String       @unique
  collectionIds String[]     @db.ObjectId
  collections   Collection[] @relation(fields: [collectionIds], references: [id])
}
